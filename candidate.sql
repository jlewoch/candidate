-- MySQL Script generated by MySQL Workbench
-- Mon 01 Oct 2018 04:56:04 PM EDT
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema Candidate
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `Candidate` ;

-- -----------------------------------------------------
-- Schema Candidate
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Candidate` DEFAULT CHARACTER SET utf8 ;
USE `Candidate` ;

-- -----------------------------------------------------
-- Table `Candidate`.`Employees`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Candidate`.`Employees` ;

CREATE TABLE IF NOT EXISTS `Candidate`.`Employees` (
  `employee_id` INT NOT NULL AUTO_INCREMENT,
  `fname` VARCHAR(45) NOT NULL,
  `lname` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `manager` INT NOT NULL,
  `phone` INT NOT NULL,
  `created_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `updated_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `updated_by` INT NOT NULL,
  PRIMARY KEY (`employee_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 100000000
PACK_KEYS = DEFAULT;

CREATE INDEX `fk_Employees_Employees1_idx` ON `Candidate`.`Employees` (`updated_by` ASC, `created_by` ASC, `manager` ASC);

CREATE UNIQUE INDEX `email_UNIQUE` ON `Candidate`.`Employees` (`email` ASC);


-- -----------------------------------------------------
-- Table `Candidate`.`Accounts`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Candidate`.`Accounts` ;

CREATE TABLE IF NOT EXISTS `Candidate`.`Accounts` (
  `account_id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NOT NULL,
  `logged_on` TINYINT(1) NOT NULL DEFAULT 0,
  `failed_attempts` INT NOT NULL DEFAULT 0,
  `locked` TINYINT(1) NOT NULL DEFAULT 0,
  `employee_id` INT NOT NULL,
  `active` TINYINT(1) NOT NULL DEFAULT 1,
  `access_level` INT NOT NULL DEFAULT 1,
  `created_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `updated_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `updated_by` INT NOT NULL,
  PRIMARY KEY (`account_id`))
ENGINE = InnoDB;

CREATE INDEX `fk_Accounts_Employees1_idx` ON `Candidate`.`Accounts` (`employee_id` ASC, `created_by` ASC, `updated_by` ASC);


-- -----------------------------------------------------
-- Table `Candidate`.`Positions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Candidate`.`Positions` ;

CREATE TABLE IF NOT EXISTS `Candidate`.`Positions` (
  `position_id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(45) NOT NULL,
  `deparment` INT NOT NULL,
  `created_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `updated_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `updated_by` INT NOT NULL,
  PRIMARY KEY (`position_id`))
ENGINE = InnoDB;

CREATE INDEX `fk_Positions_Employees1_idx` ON `Candidate`.`Positions` (`created_by` ASC, `updated_by` ASC);


-- -----------------------------------------------------
-- Table `Candidate`.`Postings`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Candidate`.`Postings` ;

CREATE TABLE IF NOT EXISTS `Candidate`.`Postings` (
  `posting_id` INT NOT NULL AUTO_INCREMENT,
  `position_id` INT NOT NULL,
  `assigned_to` INT NOT NULL,
  `created_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `updated_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `updated_by` INT NOT NULL,
  `open_date` DATE NOT NULL,
  `close_date` DATE NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`posting_id`))
ENGINE = InnoDB;

CREATE INDEX `fk_Postings_Positions1_idx` ON `Candidate`.`Postings` (`position_id` ASC);

CREATE INDEX `fk_Postings_Employees1_idx` ON `Candidate`.`Postings` (`updated_by` ASC, `created_by` ASC, `assigned_to` ASC);


-- -----------------------------------------------------
-- Table `Candidate`.`Applicants`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Candidate`.`Applicants` ;

CREATE TABLE IF NOT EXISTS `Candidate`.`Applicants` (
  `applicant_id` INT NOT NULL AUTO_INCREMENT,
  `fname` VARCHAR(45) NOT NULL,
  `lname` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `phone` INT NOT NULL,
  `created_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`applicant_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Candidate`.`Applications`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Candidate`.`Applications` ;

CREATE TABLE IF NOT EXISTS `Candidate`.`Applications` (
  `application_id` INT NOT NULL AUTO_INCREMENT,
  `applicant_id` INT NOT NULL,
  `positing_id` INT NOT NULL,
  `applied_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `status` VARCHAR(45) NOT NULL,
  `updated_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `updated_by` INT NOT NULL,
  `available_points` INT NOT NULL,
  `provided_points` INT NOT NULL DEFAULT 0,
  `grade` FLOAT NOT NULL DEFAULT 0,
  PRIMARY KEY (`application_id`))
ENGINE = InnoDB;

CREATE INDEX `fk_Applications_Applicants1_idx` ON `Candidate`.`Applications` (`applicant_id` ASC);

CREATE INDEX `fk_Applications_Employees1_idx` ON `Candidate`.`Applications` (`updated_by` ASC);

CREATE INDEX `fk_Applications_Postings1_idx` ON `Candidate`.`Applications` (`positing_id` ASC);


-- -----------------------------------------------------
-- Table `Candidate`.`Steps`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Candidate`.`Steps` ;

CREATE TABLE IF NOT EXISTS `Candidate`.`Steps` (
  `step_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `progression_level` INT NOT NULL,
  `required` TINYINT(1) NOT NULL,
  `weight` INT NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  `enabled` TINYINT(1) NOT NULL DEFAULT 1,
  `created_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `updated_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `updated_by` INT NOT NULL,
  PRIMARY KEY (`step_id`))
ENGINE = InnoDB;

CREATE INDEX `fk_Steps_Employees_idx` ON `Candidate`.`Steps` (`updated_by` ASC, `created_by` ASC);

CREATE UNIQUE INDEX `progression_level_UNIQUE` ON `Candidate`.`Steps` (`progression_level` ASC);


-- -----------------------------------------------------
-- Table `Candidate`.`Step_Evaluations`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Candidate`.`Step_Evaluations` ;

CREATE TABLE IF NOT EXISTS `Candidate`.`Step_Evaluations` (
  `step_evaluation_id` INT NOT NULL AUTO_INCREMENT,
  `provided_points` INT NOT NULL DEFAULT 0,
  `available_points` INT NOT NULL,
  `grade` FLOAT NOT NULL DEFAULT 0,
  `status` VARCHAR(45) NOT NULL DEFAULT 'In Progress',
  `application_id` INT NOT NULL,
  `created_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `updated_by` INT NOT NULL,
  `progression_level` INT NOT NULL,
  PRIMARY KEY (`step_evaluation_id`))
ENGINE = InnoDB;

CREATE INDEX `fk_step_evaluations_Employees1_idx` ON `Candidate`.`Step_Evaluations` (`updated_by` ASC);

CREATE INDEX `fk_step_evaluations_Steps1_idx` ON `Candidate`.`Step_Evaluations` (`progression_level` ASC);

CREATE INDEX `fk_step_evaluations_Applications1_idx` ON `Candidate`.`Step_Evaluations` (`application_id` ASC);


-- -----------------------------------------------------
-- Table `Candidate`.`Questions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Candidate`.`Questions` ;

CREATE TABLE IF NOT EXISTS `Candidate`.`Questions` (
  `question_id` INT NOT NULL AUTO_INCREMENT,
  `question` VARCHAR(45) NOT NULL,
  `progression_level` INT NOT NULL,
  `points` INT NOT NULL,
  `weight` INT NOT NULL,
  `enabled` TINYINT(1) NOT NULL DEFAULT 1,
  `created_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `updated_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `updated_by` INT NOT NULL,
  PRIMARY KEY (`question_id`))
ENGINE = InnoDB;

CREATE INDEX `fk_Questions_Employees1_idx` ON `Candidate`.`Questions` (`updated_by` ASC, `created_by` ASC);


-- -----------------------------------------------------
-- Table `Candidate`.`Question_Evaluations`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Candidate`.`Question_Evaluations` ;

CREATE TABLE IF NOT EXISTS `Candidate`.`Question_Evaluations` (
  `question_evaluation_id` INT NOT NULL AUTO_INCREMENT,
  `question_id` INT NOT NULL,
  `appication_id` INT NOT NULL,
  `provided_points` INT NOT NULL DEFAULT 0,
  `notes` VARCHAR(200) NULL,
  `created_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_on` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `updated_by` INT NOT NULL,
  PRIMARY KEY (`question_evaluation_id`))
ENGINE = InnoDB;

CREATE INDEX `fk_Question_Evaluations_Employees1_idx` ON `Candidate`.`Question_Evaluations` (`updated_by` ASC);

CREATE INDEX `fk_Question_Evaluations_Questions1_idx` ON `Candidate`.`Question_Evaluations` (`question_id` ASC);

CREATE INDEX `fk_Question_Evaluations_Applications1_idx` ON `Candidate`.`Question_Evaluations` (`appication_id` ASC);


-- -----------------------------------------------------
-- Table `Candidate`.`Passwords`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Candidate`.`Passwords` ;

CREATE TABLE IF NOT EXISTS `Candidate`.`Passwords` (
  `password_id` INT NOT NULL AUTO_INCREMENT,
  `account_id` INT NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`password_id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `account_id_UNIQUE` ON `Candidate`.`Passwords` (`account_id` ASC);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
